[tox]
envlist = {py27,py37}-{msim,ghdl,xvhdl,fallback,standalone}-{linux,windows}

[testenv]
platform =
    linux: linux
    windows: win32|win64

passenv =
  HOME
  CI
  APPVEYOR
  TRAVIS
  GIT_URL

setenv = 
    GIT_URL = {env:GIT_URL:https://github.com/suoto}
    
# install pytest in the virtualenv where commands will be executed
deps =
    argcomplete==1.4.1
    codecov==2.0.5
    colorama==0.3.7
    cov-core==1.15.0
    coverage==4.1
    coveralls==1.1
    docopt==0.6.2
    funcsigs==1.0.2
    future>=0.14.0
    logutils==0.3.3
    mock==2.0.0
    nose2-cov==1.0a4
    nose2==0.6.5
    pbr==1.10.0
    prettytable==0.7.2
    requests==2.20.0
    six==1.10.0
    testfixtures==4.10.0
    vunit-hdl==0.66.0
    unittest2==1.1.0
    WebTest==2.0.23
    git+https://github.com/suoto/rainbow_logging_handler

# NOTE: you can run any command line tool here - not just tests
whitelist_externals =
  linux: bash
  linux-!local: cp

  windows-!local: Xcopy

  !local: git

  local: tox

commands_pre:

  linux: git clone --depth 1 --quiet {env:GIT_URL}/grlib "{envtmpdir}/grlib"
  linux: git clone --depth 1 --quiet {env:GIT_URL}/vim-hdl-examples "{envtmpdir}/vim-hdl-examples"
  # To remove git sutff so git clean -fdx can clean that
  linux: bash -c 'rm -rf $(find {envtmpdir} -iname "\.git")'

  windows: git clone --depth 1 {env:GIT_URL}/grlib "{envtmpdir}\\grlib"
  windows: git clone --depth 1 {env:GIT_URL}/vim-hdl-examples "{envtmpdir}\\vim-hdl-examples"

  # hdlcc will generally not be used standalone and tox installs it without the
  # dependencies folder, need to copy them so that they can be found
  linux: cp -ar dependencies {envsitepackagesdir}
  windows: Xcopy /E /I /S dependencies {envsitepackagesdir}


commands =
  local: tox -p5 -e py27-xvhdl-linux -e py37-xvhdl-linux -e py27-ghdl-linux -e py27-msim-linux -e py27-fallback-linux -e py27-standalone-linux -e py37-fallback-linux -e py37-standalone-linux -e py37-ghdl-linux -e py37-msim-linux

  msim:       python run_tests.py -v --log-level DEBUG --fail-fast --msim
  ghdl:       python run_tests.py -v --log-level DEBUG --fail-fast --ghdl
  fallback:   python run_tests.py -v --log-level DEBUG --fail-fast --fallback
  standalone: python run_tests.py -v --log-level DEBUG --fail-fast --standalone
  xvhdl:      python run_tests.py -v --log-level DEBUG --fail-fast --xvhdl

  !local: coverage combine
  !local: coverage html

  windows: coverage xml
  linux: codecov
