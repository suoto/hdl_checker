# This file is part of HDL Code Checker.
#
# HDL Code Checker is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# HDL Code Checker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with HDL Code Checker.  If not, see <http://www.gnu.org/licenses/>.
---
language: python
python:
  - "2.7"

env:
  global:
    - HDLCC_CI="~/hdlcc_ci"
  matrix:
    - BUILDER=msim
    - BUILDER=ghdl
    - BUILDER=fallback standalone
    - BUILDER=xvhdl

# This should work but it doesn't!
# addons:
#   apt:
#     packages:
#       - libgd2-xpm
#       - ia32-libs
#       - ia32-libs-multiarch
# # Alternative to the above, but forces the usage of previous infrastructure,
# # which is painfuly low in comparison to the container based architecture
# sudo: required

before_install:
  - if [ "$BUILDER" == "msim" ]; then
      sudo apt-get update -qq;
      sudo apt-get install -qq libgd2-xpm ia32-libs ia32-libs-multiarch;
    fi

before_script:
  - "git submodule update"
  - "git clone https://github.com/suoto/hdlcc_ci ${HDLCC_CI} --recursive"
  - "mkdir -p ~/cache"
  - if [ "${BUILDER}" == "msim" ]  ; then "./.ci/scripts/setup_msim.sh"; fi
  - if [ "${BUILDER}" == "ghdl" ]  ; then "./.ci/scripts/setup_ghdl.sh"; fi
  - if [ "${BUILDER}" == "xvhdl" ] ; then "./.ci/scripts/setup_xvhdl.sh"; fi
# command to install dependencies
install:
  - pip install -r requirements.txt
  - pip install git+https://github.com/suoto/rainbow_logging_handler
  - pip install -e .
# command to run tests
script: "./run_tests.sh ${BUILDER} -vv --log-capture"
after_failure:
  - "cat tests.log"
after_success:
  - "coverage combine"
  - "coverage report"
  - "export COVERALLS_PARALLEL=true"
  - "coveralls"
  - "codecov"
cache:
  pip: true
  directories:
    - ~/cache/
